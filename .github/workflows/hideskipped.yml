name: Filter Skipped Jobs

on:
  workflow_run:
    workflows: [Workflow 1]
    types: [completed]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Commit Message
        id: check_message
        run: |
          if [[ "$(git log --format=%B -n 1 ${{ github.sha }})" =~ \[ci[ _]skip\]|\[skip[ _]ci\] ]]; then
            echo "Commit message contains [ci skip] or [skip ci]. Skipping further steps."
            echo "::set-output name=skip_steps::true"
          else
            echo "Commit message does not contain [ci skip] or [skip ci]. Proceeding with further steps."
            echo "::set-output name=skip_steps::false"
          fi

# jobs:
#   filter_jobs:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Fetch Workflow Runs
#         id: get_runs
#         run: |
#           echo "::set-output name=runs::$(curl -s -H 'Authorization: Bearer ${{ github.token }}' \
#             -X GET \
#             'https://api.github.com/repos/${{ github.repository }}/actions/runs')"
#         shell: bash

#       - name: Filter Skipped Jobs
#         id: filter_jobs
#         # run: |
#         #   filtered_runs=$(echo "${{ steps.get_runs.outputs.runs }}" | jq '.workflow_runs[] | select(.status != "skipped")')
#         #   echo "::set-output name=filtered_runs::${filtered_runs}"
#         run: |
#           echo "result ${{steps.get_runs.outputs.runs}}"
#         shell: bash

#       - name: Output Filtered Jobs
#         run: |
#           echo "${{ steps.filter_jobs.outputs.filtered_runs }}"

# name: Filter Skipped Jobs

# inputs:
#   repository: # GitHub repository (e.g., owner/repo)
#     description: 'The GitHub repository containing the workflow runs'
#     required: true
#   workflow_id: # ID of the workflow to fetch runs from
#     description: 'The ID of the workflow to fetch runs from'
#     required: true

# outputs:
#   filtered_runs: # Output containing filtered workflow runs

# runs:
#   using: 'docker'
#   image: 'Dockerfile'
#   args:
#     - ${{ inputs.repository }}
#     - ${{ inputs.workflow_id }}
